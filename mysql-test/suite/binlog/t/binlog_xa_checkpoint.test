--source include/have_innodb.inc
--source include/have_debug.inc
--source include/have_debug_sync.inc
--source include/have_binlog_format_row.inc

RESET MASTER;

CREATE TABLE t1 (a INT PRIMARY KEY, b MEDIUMTEXT) ENGINE=Innodb;

# Test that
# 1. XA PREPARE is binlogged before the XA has been prepared in Engine
# 2. While XA PREPARE already binlogged in an old binlog file which has been rotated,
#    Binlog checkpoint is not generated for the latest log until
#    XA PREPARE returns, e.g OK to the client.

--let $save_max_binlog_size= `SELECT @@global.max_binlog_size`
set @@global.max_binlog_size=4096;
--let $old_binlog= query_get_value(SHOW MASTER STATUS, File, 1)

# con1 will hang before doing commit checkpoint, blocking RESET MASTER.
connect(con1,localhost,root,,);
XA START '1';
INSERT INTO t1 SET a=1,b=repeat('b',@@global.max_binlog_size);
XA END '1';
XA PREPARE '1';

connection default;

--let $wait_binlog_event= Rotate
--source include/wait_for_binlog_checkpoint.inc

--source include/show_binary_logs.inc
--let $binlog_file= query_get_value(SHOW MASTER STATUS, File, 1)
--let $binlog_start= 4
--echo *** $binlog_file must show the checkpoint event with its name ***

--source include/show_binlog_events.inc

# Todo: think about the error code returned, move to an appropriate test, or remove
# connection default;
#--error 1399
# DROP TABLE t1;

connection con1;
XA ROLLBACK '1';
SET debug_sync = 'reset';

# Clean up.
connection default;

DROP TABLE t1;
SET debug_sync = 'reset';
--eval set @@global.max_binlog_size=$save_max_binlog_size
